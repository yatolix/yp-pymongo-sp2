services:

  mongo-config-srv:
    image: mongo:latest
    container_name: mongo-config-srv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr", 
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  sh1-repl-1:
    image: mongo:latest
    container_name: sh1-repl-1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - sh1-repl-1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "sh1-rs",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  sh1-repl-2:
    image: mongo:latest
    container_name: sh1-repl-2
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - sh1-repl-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "sh1-rs",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  sh1-repl-3:
    image: mongo:latest
    container_name: sh1-repl-3
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - sh1-repl-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "sh1-rs",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  sh2-repl-1:
    image: mongo:latest
    container_name: sh2-repl-1
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    volumes:
      - sh2-repl-1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "sh2-rs",
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  sh2-repl-2:
    image: mongo:latest
    container_name: sh2-repl-2
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 173.17.0.12
    volumes:
      - sh2-repl-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "sh2-rs",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  sh2-repl-3:
    image: mongo:latest
    container_name: sh2-repl-3
    restart: always
    ports:
      - "27023:27023"
    networks:
      app-network:
        ipv4_address: 173.17.0.13
    volumes:
      - sh2-repl-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "sh2-rs",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  
  mongo-router:
    image: mongo:latest
    container_name: mongo-router
    restart: always
    ports:
      - "27024:27024"
    networks:
      app-network:
        ipv4_address: 173.17.0.14
    command:
      [
        "mongos",
        "--configdb", 
        "config_server/mongo-config-srv:27017",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo-api:
    container_name: pymongo-api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongo-router
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.0.15
    environment:
      MONGODB_URL: "mongodb://mongo-router:27024"
      MONGODB_DATABASE_NAME: "somedb"

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  sh1-repl-1-data:
  sh1-repl-2-data:
  sh1-repl-3-data:
  sh2-repl-1-data:
  sh2-repl-2-data:
  sh2-repl-3-data: